/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao.arquivo;

import Conexao.conexao;
import DAO.cadastro.DAOUsuario;
import Model.cadastro.ModalUsuario;
import Util.Meios;
import java.awt.Color;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Matheus
 */
public class frm_usuarios_senha extends javax.swing.JFrame {

    private JFrame parent;
    Meios meio = new Meios();
    ModalUsuario u = new ModalUsuario();
    DAOUsuario daoU = new DAOUsuario();
    conexao conexao = new conexao();
    int flag = 0;
    int numeros = 0, letras = 0, flagCamposVazios = 0, flagVerificaSenhaAntiga = 0;
    String tela;
    Color color = new Color(56, 176, 222);
    Color colorPadrao = new Color(255, 255, 255);
    Color colorVerde = new Color(1, 153, 1);
    Color colorVermelho = new Color(153, 1, 1);

    /**
     * Creates new form frm_usuarios_senha
     */
    public frm_usuarios_senha(String login, String id, String p) {
        initComponents();
        jTextFieldLogin.isEnabled();
        jTextFieldLogin.setText(login);
        jTextFieldCodigo.setText(id);
        jLabel8Digitos.setForeground(colorVermelho);
        jLabel2Numeros2Letras.setForeground(colorVermelho);
        tela = p;
        if (p.equals("Cadastro de Usuários")) {
            jLabelSenhaAntiga.setVisible(true);
            jPasswordFieldSenhaAntiga.setVisible(true);
        } else {
            jLabelSenhaAntiga.setVisible(false);
            jPasswordFieldSenhaAntiga.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelLogin = new javax.swing.JLabel();
        jTextFieldLogin = new javax.swing.JTextField();
        jLabelSenha = new javax.swing.JLabel();
        jPasswordFieldSenha = new javax.swing.JPasswordField();
        jLabel8Digitos = new javax.swing.JLabel();
        jLabel2Numeros2Letras = new javax.swing.JLabel();
        jLabelConfirmarSenha = new javax.swing.JLabel();
        jPasswordFieldConfirmarSenha = new javax.swing.JPasswordField();
        jButtonAlterarSenha = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabelSenhaAntiga = new javax.swing.JLabel();
        jPasswordFieldSenhaAntiga = new javax.swing.JPasswordField();
        jLabelCodigo = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Senha");

        jLabelLogin.setText("Login");

        jTextFieldLogin.setEnabled(false);

        jLabelSenha.setText("Senha");

        jPasswordFieldSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordFieldSenhaActionPerformed(evt);
            }
        });
        jPasswordFieldSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPasswordFieldSenhaKeyReleased(evt);
            }
        });

        jLabel8Digitos.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8Digitos.setText("* A senha precisa ter no mínimo 8 digitos");

        jLabel2Numeros2Letras.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2Numeros2Letras.setText("*A senha precisa ter no mínimo 2 letras e 2 números");

        jLabelConfirmarSenha.setText("Confirmar senha");

        jPasswordFieldConfirmarSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordFieldConfirmarSenhaActionPerformed(evt);
            }
        });

        jButtonAlterarSenha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Box-Incoming.png"))); // NOI18N
        jButtonAlterarSenha.setToolTipText("Salvar senha");
        jButtonAlterarSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarSenhaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("INFORME SUA SENHA");

        jLabelSenhaAntiga.setText("Senha Antiga");

        jPasswordFieldSenhaAntiga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordFieldSenhaAntigaActionPerformed(evt);
            }
        });
        jPasswordFieldSenhaAntiga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPasswordFieldSenhaAntigaKeyReleased(evt);
            }
        });

        jLabelCodigo.setText("ID");

        jTextFieldCodigo.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPasswordFieldSenha)
                    .addComponent(jPasswordFieldConfirmarSenha)
                    .addComponent(jPasswordFieldSenhaAntiga)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelSenha)
                            .addComponent(jLabelConfirmarSenha)
                            .addComponent(jLabel8Digitos)
                            .addComponent(jLabel2Numeros2Letras)
                            .addComponent(jLabelSenhaAntiga))
                        .addGap(0, 17, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                            .addComponent(jTextFieldCodigo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldLogin)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelLogin)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jButtonAlterarSenha)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLogin)
                    .addComponent(jLabelCodigo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelSenhaAntiga)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordFieldSenhaAntiga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jLabelSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordFieldSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8Digitos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2Numeros2Letras)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelConfirmarSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordFieldConfirmarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonAlterarSenha)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jPasswordFieldSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordFieldSenhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordFieldSenhaActionPerformed

    private void jPasswordFieldSenhaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordFieldSenhaKeyReleased
        numeros = 0;
        letras = 0;
        if (new String(jPasswordFieldSenha.getPassword()).length() < 8) {
            // JOptionPane.showMessageDialog(null, "Senha tem menos que 8 caracteres");
            jLabel8Digitos.setForeground(colorVermelho);
            flag = 1;
        } else {
            jLabel8Digitos.setForeground(colorVerde);
            flag = 0;
        }
        verificaSenha();
        if (numeros >= 2 && letras >= 2) {
            jLabel2Numeros2Letras.setForeground(colorVerde);
            flag = 0;

        } else if (numeros < 2 || letras < 2) {
            //  JOptionPane.showMessageDialog(null, "A senha precisa ter no mínimo 2 letras e 2 números");
            jLabel2Numeros2Letras.setForeground(colorVermelho);
            flag = 1;
        }
    }//GEN-LAST:event_jPasswordFieldSenhaKeyReleased

    private void jPasswordFieldConfirmarSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordFieldConfirmarSenhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordFieldConfirmarSenhaActionPerformed

    private void jButtonAlterarSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarSenhaActionPerformed
        conexao conexao = new conexao();
        try {
            conexao.conexao();
        } catch (SQLException ex) {
        }
        verificaCampos();
        if (tela.equals("Cadastro de Usuários")) {
            verificaSenhaAntiga();
        } else {
            flagVerificaSenhaAntiga = 1;
        }
        if (flagCamposVazios == 1 && flagVerificaSenhaAntiga == 1) {
            String senha = jPasswordFieldSenha.getText();
            u.setSenha(Meios.Cripto(senha));
            u.setId(Integer.parseInt(jTextFieldCodigo.getText()));
            try {
                daoU.updatePass(u, 1);
            } catch (SQLException ex) {
                Logger.getLogger(frm_usuarios_senha.class.getName()).log(Level.SEVERE, null, ex);
            }
            dispose();
            try {
                conexao.conexao().close();
            } catch (SQLException ex) {
                Logger.getLogger(frm_usuarios_senha.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButtonAlterarSenhaActionPerformed

    private void jPasswordFieldSenhaAntigaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordFieldSenhaAntigaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordFieldSenhaAntigaActionPerformed

    private void jPasswordFieldSenhaAntigaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordFieldSenhaAntigaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordFieldSenhaAntigaKeyReleased

    private void verificaSenha() {

        for (int i = 0; i < new String(jPasswordFieldSenha.getPassword()).length(); i++) {
            Character letra = new String(jPasswordFieldSenha.getPassword()).charAt(i);
            try {
                Integer.valueOf(letra.toString());
                numeros++;

            } catch (NumberFormatException e) {
                letras++;
            }
        }
    }

    private void verificaCampos() {
        if (tela.equals("Cadastro de Usuários")) {
            if (new String(jPasswordFieldSenhaAntiga.getPassword()).isEmpty() && flag == 0) {
                JOptionPane.showMessageDialog(null, "Campo: Senha Antiga, está em branco");
                jPasswordFieldSenhaAntiga.requestFocus();
                jPasswordFieldSenhaAntiga.setBackground(color);
            } else {
                jPasswordFieldSenhaAntiga.setBackground(colorPadrao);
            }
        } else {
            jPasswordFieldSenhaAntiga.setBackground(colorPadrao);
        }
        if (new String(jPasswordFieldSenha.getPassword()).isEmpty() && flag == 0) {
            JOptionPane.showMessageDialog(null, "Campo: Senha, está em branco");
            jPasswordFieldSenha.requestFocus();
            jPasswordFieldSenha.setBackground(color);
            flag = 1;
        } else {
            jPasswordFieldSenha.setBackground(colorPadrao);
            flag = 0;
        }
        if (new String(jPasswordFieldConfirmarSenha.getPassword()).isEmpty() && flag == 0) {
            JOptionPane.showMessageDialog(null, "Campo: Confirmar Senha, está em branco");
            jPasswordFieldConfirmarSenha.requestFocus();
            jPasswordFieldConfirmarSenha.setBackground(color);
            flag = 1;
        } else {
            jPasswordFieldConfirmarSenha.setBackground(colorPadrao);
            flag = 0;
        }
        if (new String(jPasswordFieldSenha.getPassword()).equals(new String(jPasswordFieldConfirmarSenha.getPassword())) && flag == 0) {
            flag = 0;
        } else {
            JOptionPane.showMessageDialog(null, "Senhas divergentes");
            jPasswordFieldConfirmarSenha.setBackground(color);
            jPasswordFieldSenha.setBackground(color);
            flag = 1;
        }
        if (jLabel8Digitos.getForeground().equals(colorVermelho) || jLabel2Numeros2Letras.getForeground().equals(colorVermelho)) {
            JOptionPane.showMessageDialog(null, "A senha não possui os requisitos mínimos de segurança.\nPor favor, verifique.");
        }
        if (jPasswordFieldSenha.getBackground() == colorPadrao
                && jPasswordFieldConfirmarSenha.getBackground() == colorPadrao
                && jPasswordFieldSenhaAntiga.getBackground() == colorPadrao
                && jLabel2Numeros2Letras.getForeground().equals(colorVerde)
                && jLabel8Digitos.getForeground().equals(colorVerde)) {
            flagCamposVazios = 1;
        }
    }

    private void verificaSenhaAntiga() {
        conexao.executaSQL("SELECT usuario_id FROM tbl_usuario WHERE "
                + "usuario_senha = '" + Meios.Cripto(new String(jPasswordFieldSenhaAntiga.getPassword())) + "'");
        try {
            if (conexao.rs.next()) {
                flagVerificaSenhaAntiga = 1;
                jPasswordFieldSenhaAntiga.setBackground(colorPadrao);
            } else {
                JOptionPane.showMessageDialog(null, "Senha antiga não corresponde a cadastrada. Por favor, verifique.");
                jPasswordFieldSenhaAntiga.setBackground(color);
                jPasswordFieldSenhaAntiga.setBackground(color);
            }
        } catch (SQLException ex) {
            Logger.getLogger(frm_usuarios_senha.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_usuarios_senha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_usuarios_senha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_usuarios_senha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_usuarios_senha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new frm_usuarios_senha(null, null, null).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAlterarSenha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2Numeros2Letras;
    private javax.swing.JLabel jLabel8Digitos;
    private javax.swing.JLabel jLabelCodigo;
    private javax.swing.JLabel jLabelConfirmarSenha;
    private javax.swing.JLabel jLabelLogin;
    private javax.swing.JLabel jLabelSenha;
    private javax.swing.JLabel jLabelSenhaAntiga;
    private javax.swing.JPasswordField jPasswordFieldConfirmarSenha;
    private javax.swing.JPasswordField jPasswordFieldSenha;
    private javax.swing.JPasswordField jPasswordFieldSenhaAntiga;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldLogin;
    // End of variables declaration//GEN-END:variables
}
