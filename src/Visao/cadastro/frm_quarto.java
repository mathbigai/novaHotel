/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao.cadastro;

import Conexao.conexao;
import DAO.cadastro.DAOQuarto;
import DAO.cadastro.DAOQuartoAcompanhantesValores;
import Model.cadastro.ModalQuarto;
import Model.cadastro.ModalQuartoAcompanhantesValores;
import Model.table.cadastro.TableModelQuarto;
import Model.table.cadastro.TableModelQuartoAcompanhanteValores;
import Util.LimpaCampos;
import Util.ValorMonetario;
import java.awt.CardLayout;
import java.awt.Color;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Matheus
 */
public class frm_quarto extends javax.swing.JInternalFrame {

    ModalQuarto modalQuarto = new ModalQuarto();
    DAOQuarto daoQuarto = new DAOQuarto();
    ModalQuartoAcompanhantesValores modalQuartoAcompanhantesValores = new ModalQuartoAcompanhantesValores();
    DAOQuartoAcompanhantesValores dAOQuartoAcompanhantesValores = new DAOQuartoAcompanhantesValores();
    ValorMonetario valorMonetario = new ValorMonetario();
    TableModelQuarto tableModelQuarto = new TableModelQuarto();
    TableModelQuartoAcompanhanteValores tableModelQuartoAcompanhanteValores = new TableModelQuartoAcompanhanteValores();
    conexao conn = new conexao();
    int flagCamposVazios = 0, flagCamposVaziosValores = 0, flag = 0, flag2 = 0, idUltimoCadastro = 0,
            idUltimoCadastroAcompanhante = 0;
    String id = "";
    Color color = new Color(56, 176, 222);
    Color colorPadrao = new Color(255, 255, 255);

    private static frm_quarto frm_quarto;

    /**
     * Creates new form frm_quarto
     *
     * @return
     */
    public static frm_quarto getInstancia() {
        if (frm_quarto == null) {
            frm_quarto = new frm_quarto();
        }
        return frm_quarto;
    }

    public frm_quarto() {
        initComponents();
        esquemaBotoesInicio();
        CardLayout cl = (CardLayout) jPanelGeral.getLayout();
        cl.show(jPanelGeral, "consulta");
        jTableConsulta.setModel(tableModelQuarto);
        jTableAcompanhantes.setModel(tableModelQuartoAcompanhanteValores);

        try {
            atualizaTabela("select * from tbl_quarto");
        } catch (SQLException ex) {
            Logger.getLogger(frm_quarto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanelGeral = new javax.swing.JPanel();
        jPanelCadastro = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelQuarto = new javax.swing.JPanel();
        jLabelCodigo = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();
        jLabelNumeroQuarto = new javax.swing.JLabel();
        jTextFieldNumeroQuarto = new javax.swing.JTextField();
        jLabelAndarQuarto = new javax.swing.JLabel();
        jTextFieldAndarQuarto = new javax.swing.JTextField();
        jLabelTipoQuarto = new javax.swing.JLabel();
        jComboBoxTipoQuarto = new javax.swing.JComboBox<>();
        jCheckBoxIndisponivel = new javax.swing.JCheckBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaDescricaoQuarto = new javax.swing.JTextArea();
        jLabelDescricao = new javax.swing.JLabel();
        jLabelItensDisponiveis = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextAreaItensDisponiveis = new javax.swing.JTextArea();
        jButtonAdicionarPessoas = new javax.swing.JButton();
        jPanelNumeroPessoas = new javax.swing.JPanel();
        jLabelQuantidadePessoas = new javax.swing.JLabel();
        jTextFieldQuantidadeAcompanhantes = new javax.swing.JTextField();
        jLabel = new javax.swing.JLabel();
        jTextFieldValorDiaria = new javax.swing.JTextField();
        jLabelReal = new javax.swing.JLabel();
        jScrollPane = new javax.swing.JScrollPane();
        jTableAcompanhantes = new javax.swing.JTable();
        jButtonAlterarPessoa = new javax.swing.JButton();
        jButtonAdicionarPessoa = new javax.swing.JButton();
        jButtonRemoverPessoa = new javax.swing.JButton();
        jButtonCancelarPessoa = new javax.swing.JButton();
        jPanelConsulta = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableConsulta = new javax.swing.JTable();
        jButtonNovo = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonAlterar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonImprimir = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro de Quartos");
        setToolTipText("Cadastro de Quartos");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("CADASTRO DE QUARTOS");

        jPanelGeral.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelGeral.setLayout(new java.awt.CardLayout());

        jPanelCadastro.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jLabelCodigo.setText("Código");

        jTextFieldCodigo.setEditable(false);
        jTextFieldCodigo.setEnabled(false);

        jLabelNumeroQuarto.setText("Número");

        jLabelAndarQuarto.setText("Andar");

        jLabelTipoQuarto.setText("Tipo");

        jComboBoxTipoQuarto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Familiar", "Solteiro", "Empresarial" }));

        jCheckBoxIndisponivel.setText("Indisponível");

        jTextAreaDescricaoQuarto.setColumns(20);
        jTextAreaDescricaoQuarto.setLineWrap(true);
        jTextAreaDescricaoQuarto.setRows(5);
        jScrollPane4.setViewportView(jTextAreaDescricaoQuarto);

        jLabelDescricao.setText("Descrição");

        jLabelItensDisponiveis.setText("Itens Disponiveis");

        jTextAreaItensDisponiveis.setColumns(20);
        jTextAreaItensDisponiveis.setLineWrap(true);
        jTextAreaItensDisponiveis.setRows(5);
        jScrollPane5.setViewportView(jTextAreaItensDisponiveis);

        jButtonAdicionarPessoas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Contact-Plus.png"))); // NOI18N
        jButtonAdicionarPessoas.setText("Adicionar Pessoas");
        jButtonAdicionarPessoas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarPessoasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelQuartoLayout = new javax.swing.GroupLayout(jPanelQuarto);
        jPanelQuarto.setLayout(jPanelQuartoLayout);
        jPanelQuartoLayout.setHorizontalGroup(
            jPanelQuartoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelQuartoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelQuartoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBoxIndisponivel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelCodigo)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNumeroQuarto)
                    .addComponent(jTextFieldAndarQuarto)
                    .addComponent(jLabelNumeroQuarto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelAndarQuarto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelTipoQuarto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxTipoQuarto, 0, 98, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanelQuartoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDescricao)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelQuartoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelQuartoLayout.createSequentialGroup()
                        .addComponent(jLabelItensDisponiveis)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .addComponent(jButtonAdicionarPessoas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelQuartoLayout.setVerticalGroup(
            jPanelQuartoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelQuartoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelQuartoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelQuartoLayout.createSequentialGroup()
                        .addGroup(jPanelQuartoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelCodigo)
                            .addComponent(jLabelDescricao))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelQuartoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelQuartoLayout.createSequentialGroup()
                                .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelNumeroQuarto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldNumeroQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelAndarQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldAndarQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelTipoQuarto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxTipoQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 50, Short.MAX_VALUE))
                            .addComponent(jScrollPane4)))
                    .addGroup(jPanelQuartoLayout.createSequentialGroup()
                        .addComponent(jLabelItensDisponiveis)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5)))
                .addGap(18, 18, 18)
                .addGroup(jPanelQuartoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxIndisponivel)
                    .addComponent(jButtonAdicionarPessoas))
                .addGap(21, 21, 21))
        );

        jTabbedPane1.addTab("Quarto", jPanelQuarto);

        jLabelQuantidadePessoas.setText("Quantidade de Pessoas");

        jLabel.setText("Valor da Diária");

        jLabelReal.setText("R$");

        jTableAcompanhantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableAcompanhantes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAcompanhantesMouseClicked(evt);
            }
        });
        jScrollPane.setViewportView(jTableAcompanhantes);

        jButtonAlterarPessoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Repeat (3).png"))); // NOI18N
        jButtonAlterarPessoa.setText("Alterar");
        jButtonAlterarPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarPessoaActionPerformed(evt);
            }
        });

        jButtonAdicionarPessoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Download.png"))); // NOI18N
        jButtonAdicionarPessoa.setText("Adicionar");
        jButtonAdicionarPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarPessoaActionPerformed(evt);
            }
        });

        jButtonRemoverPessoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Contact-Error.png"))); // NOI18N
        jButtonRemoverPessoa.setText("Remover");
        jButtonRemoverPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverPessoaActionPerformed(evt);
            }
        });

        jButtonCancelarPessoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Remove (2).png"))); // NOI18N
        jButtonCancelarPessoa.setText("Cancelar");
        jButtonCancelarPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarPessoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelNumeroPessoasLayout = new javax.swing.GroupLayout(jPanelNumeroPessoas);
        jPanelNumeroPessoas.setLayout(jPanelNumeroPessoasLayout);
        jPanelNumeroPessoasLayout.setHorizontalGroup(
            jPanelNumeroPessoasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNumeroPessoasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelNumeroPessoasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelNumeroPessoasLayout.createSequentialGroup()
                        .addGroup(jPanelNumeroPessoasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelNumeroPessoasLayout.createSequentialGroup()
                                .addGroup(jPanelNumeroPessoasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelQuantidadePessoas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldQuantidadeAcompanhantes)
                                    .addGroup(jPanelNumeroPessoasLayout.createSequentialGroup()
                                        .addComponent(jLabelReal)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldValorDiaria)))
                                .addGap(18, 18, 18))
                            .addGroup(jPanelNumeroPessoasLayout.createSequentialGroup()
                                .addComponent(jLabel)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelNumeroPessoasLayout.createSequentialGroup()
                        .addComponent(jButtonAdicionarPessoa)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAlterarPessoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonRemoverPessoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCancelarPessoa)
                        .addGap(86, 86, 86)))
                .addContainerGap())
        );
        jPanelNumeroPessoasLayout.setVerticalGroup(
            jPanelNumeroPessoasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNumeroPessoasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelNumeroPessoasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelNumeroPessoasLayout.createSequentialGroup()
                        .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18))
                    .addGroup(jPanelNumeroPessoasLayout.createSequentialGroup()
                        .addComponent(jLabelQuantidadePessoas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldQuantidadeAcompanhantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelNumeroPessoasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldValorDiaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelReal))
                        .addGap(1, 171, Short.MAX_VALUE)))
                .addGroup(jPanelNumeroPessoasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdicionarPessoa)
                    .addComponent(jButtonAlterarPessoa)
                    .addComponent(jButtonRemoverPessoa)
                    .addComponent(jButtonCancelarPessoa))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Número de Pessoas para o Quarto", jPanelNumeroPessoas);

        javax.swing.GroupLayout jPanelCadastroLayout = new javax.swing.GroupLayout(jPanelCadastro);
        jPanelCadastro.setLayout(jPanelCadastroLayout);
        jPanelCadastroLayout.setHorizontalGroup(
            jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCadastroLayout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanelCadastroLayout.setVerticalGroup(
            jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCadastroLayout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelGeral.add(jPanelCadastro, "cadastro");

        jTableConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTableConsulta);

        javax.swing.GroupLayout jPanelConsultaLayout = new javax.swing.GroupLayout(jPanelConsulta);
        jPanelConsulta.setLayout(jPanelConsultaLayout);
        jPanelConsultaLayout.setHorizontalGroup(
            jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
        );
        jPanelConsultaLayout.setVerticalGroup(
            jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
        );

        jPanelGeral.add(jPanelConsulta, "consulta");

        jButtonNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Plus.png"))); // NOI18N
        jButtonNovo.setToolTipText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        jButtonSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Box-Incoming.png"))); // NOI18N
        jButtonSalvar.setToolTipText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Repeat.png"))); // NOI18N
        jButtonAlterar.setToolTipText("Alterar");
        jButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarActionPerformed(evt);
            }
        });

        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Remove.png"))); // NOI18N
        jButtonCancelar.setToolTipText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Relatorio3.png"))); // NOI18N
        jButtonImprimir.setToolTipText("Imprimir");
        jButtonImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelGeral, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jButtonAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap())))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonImprimir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonCancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jPanelGeral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        flag = 1;
        jCheckBoxIndisponivel.setVisible(false);
        esquemaBotoesSalvar();
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed

        if (flag == 1) {
            limpaCampos();
            esquemaBotoesInicio();
            tableModelQuartoAcompanhanteValores.dados.removeAll(tableModelQuartoAcompanhanteValores.dados);
            try {
                atualizaTabela("select * from tbl_quarto");
            } catch (SQLException ex) {
                Logger.getLogger(frm_quarto.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            verificaCamposVazios();
            if (flagCamposVazios == 1) {
                modalQuarto.setAndar(jTextFieldAndarQuarto.getText());
                modalQuarto.setDescricao(jTextAreaDescricaoQuarto.getText());
                modalQuarto.setItensDispo(jTextAreaItensDisponiveis.getText());
                modalQuarto.setNumero(jTextFieldNumeroQuarto.getText());
                modalQuarto.setTipo(jComboBoxTipoQuarto.getSelectedItem().toString());

                modalQuarto.setId(Integer.parseInt(jTextFieldCodigo.getText()));
                if (jCheckBoxIndisponivel.isSelected()) {
                    modalQuarto.setStatus("Indisponível");
                } else {
                    modalQuarto.setStatus("Disponível");
                }
                try {
                    daoQuarto.update(modalQuarto);
                    esquemaBotoesInicio();
                    limpaCampos();
                    atualizaTabela("select * from tbl_quarto");
                    conn.rs.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_quarto.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarActionPerformed
        flag = 2;

        if (jTableConsulta.getSelectedRow() != -1) {
            if (jTableConsulta.getValueAt(jTableConsulta.getSelectedRow(), 2).toString().equals("Ocupado")) {
                JOptionPane.showMessageDialog(null, "Não é possivel alterar quarto com status OCUPADO.");
                jButtonSalvar.setVisible(false);
                jButtonAdicionarPessoa.setVisible(false);
                jTableAcompanhantes.setEnabled(false);
            } else {
                jButtonSalvar.setVisible(true);
                jButtonAdicionarPessoa.setVisible(true);
                jTableAcompanhantes.setEnabled(true);
            }
            
            jCheckBoxIndisponivel.setVisible(true);

            jTextFieldCodigo.setText(jTableConsulta.getValueAt(jTableConsulta.getSelectedRow(), 0).toString());
            try {
                atualizaTabelaAcompanhantes("SELECT * FROM tbl_quarto_acompanhantes WHERE "
                        + "quarto_acompanhantes_quarto_id = " + jTextFieldCodigo.getText());
            } catch (SQLException ex) {
                Logger.getLogger(frm_quarto.class.getName()).log(Level.SEVERE, null, ex);
            }
            jTextFieldNumeroQuarto.setText(jTableConsulta.getValueAt(jTableConsulta.getSelectedRow(), 1).toString());
            if (jTableConsulta.getValueAt(jTableConsulta.getSelectedRow(), 2).toString().equals("Indisponível")) {
                jCheckBoxIndisponivel.setSelected(true);
            } else {
                jCheckBoxIndisponivel.setSelected(false);
            }

            conn.executaSQL("SELECT quarto_descricao, quarto_itens_dispo, quarto_andar, "
                    + "quarto_tipo FROM tbl_quarto WHERE quarto_id = " + jTextFieldCodigo.getText());
            try {
                if (conn.rs.next()) {
                    jTextAreaDescricaoQuarto.setText(conn.rs.getString("quarto_descricao"));
                    jTextAreaItensDisponiveis.setText(conn.rs.getString("quarto_itens_dispo"));
                    jTextFieldAndarQuarto.setText(conn.rs.getString("quarto_andar"));
                    jComboBoxTipoQuarto.setSelectedItem(conn.rs.getString("quarto_tipo"));
                    jTextFieldValorDiaria.setText(String.valueOf(conn.rs.getDouble("quarto_valor_diaria")));
                }

                conn.rs.close();
            } catch (SQLException ex) {

            }

            esquemaBotoesSalvar();

        } else {
            JOptionPane.showMessageDialog(null, "Para alterar, selecione algum item.");
        }
    }//GEN-LAST:event_jButtonAlterarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        flag = 0;
        flag2 = 0;
        limpaCampos();
        esquemaBotoesInicio();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImprimirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonImprimirActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        frm_quarto = null;
    }//GEN-LAST:event_formInternalFrameClosed

    private void jButtonAdicionarPessoasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarPessoasActionPerformed
        verificaCamposVazios();
        if (flagCamposVazios == 1) {
            if (flag == 1) {
                modalQuarto.setAndar(jTextFieldAndarQuarto.getText());
                modalQuarto.setDescricao(jTextAreaDescricaoQuarto.getText());
                modalQuarto.setItensDispo(jTextAreaItensDisponiveis.getText());

                modalQuarto.setNumero(jTextFieldNumeroQuarto.getText());
                modalQuarto.setTipo(jComboBoxTipoQuarto.getSelectedItem().toString());

                if (flag == 1) {
                    modalQuarto.setStatus("Disponível");
                    try {
                        daoQuarto.create(modalQuarto);
                        ultimoCadastro(jTextFieldNumeroQuarto.getText());
                        limpaCampos();
                        flag2 = 1;
                        esquemaBotoesAdicionarPessoas();
                        conn.rs.close();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Erro ao cadastrar: \n" + ex);
                        Logger.getLogger(frm_quarto.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            } else {
                esquemaBotoesAdicionarPessoas();
            }
        }
    }//GEN-LAST:event_jButtonAdicionarPessoasActionPerformed

    private void jTableAcompanhantesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAcompanhantesMouseClicked
        if (jTableAcompanhantes.getSelectedRow() != -1) {
            jButtonAlterarPessoa.setVisible(true);
            jButtonRemoverPessoa.setVisible(true);
            jButtonAdicionarPessoa.setVisible(false);
            jButtonCancelarPessoa.setVisible(true);
            jTextFieldQuantidadeAcompanhantes.setText(jTableAcompanhantes.getValueAt(jTableAcompanhantes.getSelectedRow(), 1).toString());
            jTextFieldValorDiaria.setText(String.valueOf(jTableAcompanhantes.getValueAt(jTableAcompanhantes.getSelectedRow(), 2)));
            id = String.valueOf(jTableAcompanhantes.getValueAt(jTableAcompanhantes.getSelectedRow(), 0));
            flag2 = 2;
        }
    }//GEN-LAST:event_jTableAcompanhantesMouseClicked

    private void jButtonAlterarPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarPessoaActionPerformed
        cadastraPessoaQuarto();
    }//GEN-LAST:event_jButtonAlterarPessoaActionPerformed

    private void jButtonAdicionarPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarPessoaActionPerformed
        cadastraPessoaQuarto();
    }//GEN-LAST:event_jButtonAdicionarPessoaActionPerformed

    private void jButtonRemoverPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverPessoaActionPerformed
        flag2 = 3;
        cadastraPessoaQuarto();
    }//GEN-LAST:event_jButtonRemoverPessoaActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        flag2 = 1;
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jButtonCancelarPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarPessoaActionPerformed
        limpaCamposAcompanhantes();
        jButtonAlterarPessoa.setVisible(false);
        jButtonRemoverPessoa.setVisible(false);
        jButtonAdicionarPessoa.setVisible(true);
        jButtonCancelarPessoa.setVisible(false);
    }//GEN-LAST:event_jButtonCancelarPessoaActionPerformed

    private void esquemaBotoesInicio() {
        jButtonCancelar.setVisible(false);
        jButtonSalvar.setVisible(false);
        jButtonNovo.setVisible(true);
        jButtonAlterar.setVisible(true);
        jButtonAdicionarPessoa.setVisible(true);
        CardLayout cl = (CardLayout) jPanelGeral.getLayout();
        cl.show(jPanelGeral, "consulta");
    }

    private void esquemaBotoesSalvar() {
        if (flag == 2) {
            jButtonAdicionarPessoas.setVisible(false);
            jButtonSalvar.setVisible(true);
            jTabbedPane1.setEnabledAt(0, true);
            jTabbedPane1.setEnabledAt(1, true);
        } else {
            jButtonAdicionarPessoas.setVisible(true);
            jButtonSalvar.setVisible(false);
            jTabbedPane1.setEnabledAt(0, true);
            jTabbedPane1.setEnabledAt(1, false);
        }
        jButtonAlterarPessoa.setVisible(false);
        jButtonRemoverPessoa.setVisible(false);
        jButtonCancelarPessoa.setVisible(false);
        jButtonCancelar.setVisible(true);
        jButtonNovo.setVisible(false);
        jButtonAlterar.setVisible(false);
        jTabbedPane1.setSelectedIndex(0);

        CardLayout cl = (CardLayout) jPanelGeral.getLayout();
        cl.show(jPanelGeral, "cadastro");
    }

    private void esquemaBotoesAdicionarPessoas() {
        jButtonCancelar.setVisible(true);
        jButtonSalvar.setVisible(true);
        jButtonNovo.setVisible(false);
        jButtonAlterar.setVisible(false);
        jTabbedPane1.setSelectedIndex(1);
        jTabbedPane1.setEnabledAt(1, true);
        jTabbedPane1.setEnabledAt(0, false);
        CardLayout cl = (CardLayout) jPanelGeral.getLayout();
        cl.show(jPanelGeral, "cadastro");
    }

    private void verificaCamposVazios() {
        if (jTextFieldNumeroQuarto.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo: Número, está em branco");
            jTextFieldNumeroQuarto.requestFocus();
            jTextFieldNumeroQuarto.setBackground(color);
        } else {
            jTextFieldNumeroQuarto.setBackground(colorPadrao);
        }
        if (jTextFieldAndarQuarto.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo: Andar, está em branco");
            jTextFieldAndarQuarto.requestFocus();
            jTextFieldAndarQuarto.setBackground(color);
        } else {
            jTextFieldAndarQuarto.setBackground(colorPadrao);
        }
        if (jTextFieldNumeroQuarto.getBackground() == colorPadrao
                && jTextFieldAndarQuarto.getBackground() == colorPadrao) {
            flagCamposVazios = 1;
        } else {
            flagCamposVazios = 0;
        }
    }

    private void verificaCamposVaziosAdicionarValores() {
        if (jTextFieldQuantidadeAcompanhantes.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo: Quantidade de Acompanhantes, está em branco");
            jTextFieldQuantidadeAcompanhantes.requestFocus();
            jTextFieldQuantidadeAcompanhantes.setBackground(color);
        } else {
            jTextFieldQuantidadeAcompanhantes.setBackground(colorPadrao);
        }
        if (jTextFieldValorDiaria.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo: Valor da Diária, está em branco");
            jTextFieldValorDiaria.requestFocus();
            jTextFieldValorDiaria.setBackground(color);
        } else {
            jTextFieldValorDiaria.setBackground(colorPadrao);
        }
        if (jTextFieldQuantidadeAcompanhantes.getBackground() == colorPadrao
                && jTextFieldValorDiaria.getBackground() == colorPadrao) {
            flagCamposVaziosValores = 1;
        } else {
            flagCamposVaziosValores = 0;
        }
    }

    private void limpaCampos() {
        LimpaCampos.limpaCampos(jPanelQuarto.getComponents());
        jTextAreaDescricaoQuarto.setText("");
        jTextAreaItensDisponiveis.setText("");
    }

    private void limpaCamposAcompanhantes() {
        LimpaCampos.limpaCampos(jPanelNumeroPessoas.getComponents());
    }

    public void atualizaTabela(String sql) throws SQLException {
        tableModelQuarto.dados.removeAll(tableModelQuarto.dados);
        conn.executaSQL(sql);
        while (conn.rs.next()) {
            ModalQuarto modalQ = new ModalQuarto();

            modalQ.setId(conn.rs.getInt("quarto_id"));
            modalQ.setNumero(conn.rs.getString("quarto_numero"));
            modalQ.setStatus(conn.rs.getString("quarto_status"));
            tableModelQuarto.addRow(modalQ);
        }
        conn.rs.close();
    }

    public void atualizaTabelaAcompanhantes(String sql) throws SQLException {
        tableModelQuartoAcompanhanteValores.dados.removeAll(tableModelQuartoAcompanhanteValores.dados);
        conn.executaSQL(sql);
        while (conn.rs.next()) {
            ModalQuartoAcompanhantesValores modalQ = new ModalQuartoAcompanhantesValores();

            modalQ.setId(conn.rs.getInt("quarto_acompanhantes_id"));
            modalQ.setQuantidade(conn.rs.getInt("quarto_cama_quantidade_acompanhantes"));
            modalQ.setValorDiaria(conn.rs.getDouble("quarto_acompanhantes_valor"));
            tableModelQuartoAcompanhanteValores.addRow(modalQ);
        }
        conn.rs.close();
    }

    private void ultimoCadastro(String numero) {
        conn.executaSQL("SELECT quarto_id FROM tbl_quarto WHERE quarto_numero = '" + numero + "'");
        try {
            if (conn.rs.last()) {
                idUltimoCadastro = conn.rs.getInt("quarto_id");
            }
            conn.rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(frm_quarto.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void ultimoCadastroAcompanhantes(int numero) {
        conn.executaSQL("SELECT quarto_acompanhantes_id FROM tbl_quarto_acompanhantes "
                + "WHERE quarto_acompanhantes_quarto_id = " + numero);
        try {
            if (conn.rs.last()) {
                idUltimoCadastroAcompanhante = conn.rs.getInt("quarto_acompanhantes_id") + 1;
                System.out.println(idUltimoCadastroAcompanhante);
            } else {
                idUltimoCadastroAcompanhante = 1;
            }
            conn.rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(frm_quarto.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cadastraPessoaQuarto() {
        int ultimoCadastro = 0;
        verificaCamposVaziosAdicionarValores();
        if (flagCamposVaziosValores == 1) {

            modalQuartoAcompanhantesValores.setQuantidade(Integer.valueOf(jTextFieldQuantidadeAcompanhantes.getText()));
            modalQuartoAcompanhantesValores.setValorDiaria(Double.parseDouble(jTextFieldValorDiaria.getText()));
            if (jTextFieldCodigo.getText().isEmpty()) {
                ultimoCadastro = idUltimoCadastro;
                modalQuartoAcompanhantesValores.setCodigoQuarto(ultimoCadastro);
                ultimoCadastroAcompanhantes(ultimoCadastro);
            } else {
                ultimoCadastro = Integer.valueOf(jTextFieldCodigo.getText());
                modalQuartoAcompanhantesValores.setCodigoQuarto(Integer.valueOf(jTextFieldCodigo.getText()));
                ultimoCadastroAcompanhantes(Integer.valueOf(jTextFieldCodigo.getText()));
            }
            modalQuartoAcompanhantesValores.setId(idUltimoCadastroAcompanhante);
            switch (flag2) {
                case 1:
                    try {
                    dAOQuartoAcompanhantesValores.create(modalQuartoAcompanhantesValores);
                    limpaCamposAcompanhantes();
                    atualizaTabelaAcompanhantes("SELECT * FROM tbl_quarto_acompanhantes WHERE "
                            + "quarto_acompanhantes_quarto_id = " + ultimoCadastro + "");
                } catch (SQLException ex) {
                    System.out.println(ex);
                }
                break;
                case 2:
                    try {
                    modalQuartoAcompanhantesValores.setId(Integer.valueOf(id));
                    dAOQuartoAcompanhantesValores.update(modalQuartoAcompanhantesValores);
                    limpaCamposAcompanhantes();
                    atualizaTabelaAcompanhantes("SELECT * FROM tbl_quarto_acompanhantes WHERE "
                            + "quarto_acompanhantes_quarto_id = " + ultimoCadastro + "");
                    jButtonAlterarPessoa.setVisible(false);
                    jButtonRemoverPessoa.setVisible(false);
                    jButtonAdicionarPessoa.setVisible(true);
                    jButtonCancelarPessoa.setVisible(false);
                    flag2 = 1;
                } catch (SQLException ex) {
                    Logger.getLogger(frm_quarto.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
                case 3:
                    int opcion = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir esse cadastro?", "Atenção", JOptionPane.YES_NO_OPTION);
                    if (opcion == 0) {
                        try {
                            modalQuartoAcompanhantesValores.setId(Integer.valueOf(id));
                            dAOQuartoAcompanhantesValores.delete(modalQuartoAcompanhantesValores);
                            limpaCamposAcompanhantes();
                            atualizaTabelaAcompanhantes("SELECT * FROM tbl_quarto_acompanhantes WHERE "
                                    + "quarto_acompanhantes_quarto_id = " + ultimoCadastro + "");
                            jButtonAlterarPessoa.setVisible(false);
                            jButtonRemoverPessoa.setVisible(false);
                            jButtonAdicionarPessoa.setVisible(true);
                            jButtonCancelarPessoa.setVisible(false);
                            flag2 = 1;
                        } catch (SQLException ex) {
                            Logger.getLogger(frm_quarto.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    break;

                default:
                    break;
            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdicionarPessoa;
    private javax.swing.JButton jButtonAdicionarPessoas;
    private javax.swing.JButton jButtonAlterar;
    private javax.swing.JButton jButtonAlterarPessoa;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonCancelarPessoa;
    private javax.swing.JButton jButtonImprimir;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonRemoverPessoa;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JCheckBox jCheckBoxIndisponivel;
    private javax.swing.JComboBox<String> jComboBoxTipoQuarto;
    private javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelAndarQuarto;
    private javax.swing.JLabel jLabelCodigo;
    private javax.swing.JLabel jLabelDescricao;
    private javax.swing.JLabel jLabelItensDisponiveis;
    private javax.swing.JLabel jLabelNumeroQuarto;
    private javax.swing.JLabel jLabelQuantidadePessoas;
    private javax.swing.JLabel jLabelReal;
    private javax.swing.JLabel jLabelTipoQuarto;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelCadastro;
    private javax.swing.JPanel jPanelConsulta;
    private javax.swing.JPanel jPanelGeral;
    private javax.swing.JPanel jPanelNumeroPessoas;
    private javax.swing.JPanel jPanelQuarto;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableAcompanhantes;
    private javax.swing.JTable jTableConsulta;
    private javax.swing.JTextArea jTextAreaDescricaoQuarto;
    private javax.swing.JTextArea jTextAreaItensDisponiveis;
    private javax.swing.JTextField jTextFieldAndarQuarto;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldNumeroQuarto;
    private javax.swing.JTextField jTextFieldQuantidadeAcompanhantes;
    private javax.swing.JTextField jTextFieldValorDiaria;
    // End of variables declaration//GEN-END:variables
}
